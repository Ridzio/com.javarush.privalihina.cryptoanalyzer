package com.javarush.cryptoanalyzer.privalikhina.view;

import com.javarush.cryptoanalyzer.privalikhina.entity.Result;

import java.util.Scanner;

import static com.javarush.cryptoanalyzer.privalikhina.constants.ApplicationCompletionConstants.EXCEPTION;
import static com.javarush.cryptoanalyzer.privalikhina.constants.ApplicationCompletionConstants.SUCCESS;
import static com.javarush.cryptoanalyzer.privalikhina.constants.FunctionCodeConstants.*;

public class ConsoleView implements View {

    @Override
    public String[] getParameters() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:");
        System.out.println("1 - –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å");
        System.out.println("2 - –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å");
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–µ–∂–∏–º–∞: ");
        String modeInput = scanner.nextLine().trim();

        String mode;
        switch (modeInput) {
            case "1" -> mode = ENCODE;
            case "2" -> mode = DECODE;
            default -> {
                System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º. –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è.");
                mode = UNSUPPORTED_FUNCTION;
            }
        }

        System.out.print("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –≤—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É: ");
        String inputFilePath = scanner.nextLine().trim();

        System.out.print("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –≤—ã—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É: ");
        String outputFilePath = scanner.nextLine().trim();

        System.out.print("–í–≤–µ–¥–∏—Ç–µ —Å–¥–≤–∏–≥ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ): ");
        String shift = scanner.nextLine().trim();

        return new String[]{mode, inputFilePath, outputFilePath, shift};
    }

    @Override
    public void printResult(Result result) {
        switch (result.getResultCode()) {
            case OK -> System.out.println(SUCCESS);
            case ERROR -> {
                System.out.println(EXCEPTION + result.getApplicationException().getMessage());
                result.getApplicationException().printStackTrace(); // üëà –ø–µ—á–∞—Ç–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏
            }
        }
    }
}